/**
 * This file is part of FXGameEngine A Game Engine written in JavaFX Copyright
 * (C) 2012 Anton Epple <info@eppleton.de>
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program. Look for COPYING file in the top folder. If not, see
 * http://opensource.org/licenses/GPL-2.0.
 *
 * For alternative licensing or use in closed source projects contact Anton
 * Epple
 * <info@eppleton.de>
 */
package de.eppleton.fx2d.samplegames.bck2brwsr;

import de.eppleton.canvas.html.HTML5Graphics;
import de.eppleton.fx2d.Level;
import de.eppleton.fx2d.event.KeyCode;
import de.eppleton.fx2d.event.KeyEvent;
import de.eppleton.fx2d.samples.pong.Pong;
import net.java.html.boot.BrowserBuilder;
import net.java.html.canvas.GraphicsContext2D;
import net.java.html.js.JavaScriptBody;


/**
 * This is the controller class for associated index.html page. The
 * <code>Index</code> is autogenerated by parsing the index.html page. It fields
 * represent individual elements annotated by "id" in the page.
 */
public final class Main {


   
    /**
     * Launches the browser
     */
    public static void main(String... args) throws Exception {
        BrowserBuilder.newBrowser().
                loadPage("de/eppleton/fx2d/samplegames/bck2brwsr/index.html").
                loadClass(Main.class).
                invoke("onPageLoad", args).
                showAndWait();
        System.exit(0);
    }

    public static void onPageLoad(String... args) throws Exception {
        GraphicsContext2D gc = HTML5Graphics.getOrCreate("canvas");
        game = new Pong(gc, 800, 600, 800, 600);
        game.start();
    }

    private static Level game;

    static void keyPress(int keyCode) {
        KeyCode keyCode1 = KeyCode.getKeyCode(keyCode);
        game.dispatchEvent(new KeyEvent(game, KeyEvent.KEY_PRESSED, keyCode1));
    }

    static void keyRealeased( int keyCode) {
        KeyCode keyCode1 = KeyCode.getKeyCode(keyCode);
        game.dispatchEvent(new KeyEvent(game, KeyEvent.KEY_RELEASED, keyCode1));
    }

}
